{
    // https://code.visualstudio.com/docs/getstarted/settings#_default-settings
    "[csv]": {
        "editor.wordWrap": "off", // care about too long rows
    },
    "[dockerfile]": {
        "editor.defaultFormatter": "ms-azuretools.vscode-docker"
    },
    "[javascript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[json]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[log]": {
        "editor.wordWrap": "off", // care about too long rows
    },
    "[lua]": {
        "editor.defaultFormatter": "JohnnyMorganz.stylua"
    },
    "[properties]": {
        "editor.formatOnSave": false,
    },
    "[python]": {
        "diffEditor.ignoreTrimWhitespace": false, // indent has semantic meaning
    },
    "[ruby]": {
        "editor.formatOnSave": false,
        "files.trimFinalNewlines": false,
    },
    "[markdown]": {
        "files.trimTrailingWhitespace": false, // trailing space has semantic meaning
    },
    "[scss]": {
        "editor.formatOnSave": false
    },
    "[tsv]": {
        "editor.insertSpaces": false, // tab has semantic meaning
        "editor.wordWrap": "off", // care about too long rows
    },
    "[typescript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[yaml]": {
        "diffEditor.ignoreTrimWhitespace": false, // indent has semantic meaning
    },
    "debug.autoExpandLazyVariables": false, // true if I need eager load
    "debug.internalConsoleOptions": "openOnSessionStart", // from "openOnFirstSessionStart"
    "debug.openDebug": "openOnSessionStart", // from "openOnFirstSessionStart"
    "diffEditor.ignoreTrimWhitespace": false,
    "diffEditor.maxComputationTime": 0,
    "diffEditor.renderSideBySide": false,
    "diffEditor.wordWrap": "off",
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    },
    "editor.copyWithSyntaxHighlighting": false, // copy as plain text
    "editor.cursorBlinking": "phase", // smooth blink
    "editor.cursorStyle": "line",
    "editor.dragAndDrop": false, // prevent to move codes by misuse of D&D
    "editor.fontFamily": "Cica, 'Ricty Diminished', monospace",
    "editor.formatOnType": true,
    "editor.formatOnPaste": true,
    "editor.formatOnSave": true,
    "editor.guides.bracketPairs": "active", // colorful indent guides
    "editor.inlineSuggest.enabled": true,
    "editor.minimap.enabled": false, // disable to save editor space
    "editor.mouseWheelZoom": true,
    "editor.quickSuggestionsDelay": 200, // from 10
    "editor.suggest.preview": true, // suggest preview like copilot
    "editor.renderControlCharacters": true, // ENSURE to display control characters
    "editor.renderWhitespace": "boundary", // ENSURE to display whitespace
    "editor.showFoldingControls": "always", // from "mouseover"
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?　、。！？「」【】『』（）", // add Japanese separators
    "editor.wordWrap": "on", // always word wrap
    "eslint.format.enable": true,
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],
    "explorer.incrementalNaming": "smart", // paste copied filename with numbers suffix
    "extensions.ignoreRecommendations": false,
    "files.eol": "\n",
    "files.exclude": {
        "**/*.egg-info": true,
        "**/.cache": true,
        "**/.classpath": true,
        "**/.factorypath": true,
        "**/.project": true,
        "**/.pytest_cache": true,
        "**/.settings": true,
        "**/__pycache__": true
    },
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "files.trimTrailingWhitespace": true,
    "git.autofetch": true,
    "git.branchProtection": [
        "master",
        "main",
        "development"
    ],
    "git.confirmSync": false,
    "git.detectSubmodulesLimit": 30,
    "git.enableSmartCommit": false,
    "git.openRepositoryInParentFolders": "always",
    "git.suggestSmartCommit": false,
    "gitlens.menus": {
        "editorGroup": {
            "blame": false,
            "compare": false
        }
    },
    "github.copilot.enable": {
        "*": true,
        "plaintext": false,
        "markdown": false,
        "scminput": false,
        "yaml": true,
        "rust": true
    },
    "gitlens.mode.statusBar.enabled": false,
    "java.format.settings.profile": "GoogleStyle",
    "java.format.settings.url": "https://raw.githubusercontent.com/google/styleguide/gh-pages/eclipse-java-google-style.xml",
    "java.project.importHint": false,
    "javascript.updateImportsOnFileMove.enabled": "always",
    "launch": {
        "configurations": [
            {
                "name": "Attach with rdbg",
                "request": "attach",
                "type": "rdbg"
            }
        ],
        "version": "0.2.0"
    },
    "markdown.validate.enabled": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "problems.showCurrentInStatus": false, // if true, current file's problems only
    "python.defaultInterpreterPath": "/usr/bin/python",
    "python.languageServer": "Pylance",
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "python.testing.pytestEnabled": true,
    "redhat.telemetry.enabled": false,
    "rust-analyzer.diagnostics.disabled": [
        "unresolved-macro-call"
    ],
    "scss.lint.unknownAtRules": "ignore",
    "scss.validate": false,
    "search.showLineNumbers": true,
    "shellformat.effectLanguages": [
        "shellscript",
        "dockerfile",
        "dotenv",
        "hosts",
        "jvmoptions",
        "ignore",
        "gitignore",
        "spring-boot-properties",
        "azcli",
        "bats"
    ],
    "solargraph.checkGemVersion": false,
    "solargraph.diagnostics": true,
    "solargraph.formatting": true,
    "telemetry.telemetryLevel": "off", // no error report
    "terminal.external.osxExec": "iTerm.app",
    "terminal.integrated.cursorBlinking": true,
    "terminal.integrated.cursorStyle": "line",
    "terminal.integrated.fontFamily": "Cica, 'Ricty Diminished', Consolas, 'Courier New', monospace",
    "terminal.integrated.scrollback": 50000,
    "vim.easymotion": true, // https://github.com/VSCodeVim/Vim#vim-easymotion
    "vim.handlekeys": {
        "<C-a>": false, // increment number -> select all
        "<C-d>": false, // page down -> quick word selection
    },
    "vim.highlightedyank.enable": true,
    "vim.hlsearch": true,
    "vim.incsearch": true,
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "j"
            ],
            "after": [
                "<Esc>"
            ]
        }, // quick escape
    ],
    "vim.leader": "space",
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "f"
            ],
            "after": [
                "leader",
                "leader",
                "s"
            ]
        }, // inline find -> easy motion find
        {
            "before": [
                "<C-n>"
            ],
            "commands": [
                ":nohl"
            ]
        } // -> no highlight
    ],
    "vim.surround": true, // https://github.com/VSCodeVim/Vim#vim-surround
    "vim.useSystemClipboard": true, // use system clipboard
    "vim.visualstar": true,
    "vscode-neovim.neovimExecutablePaths.darwin": "/usr/local/bin/nvim",
    "vscode-neovim.neovimInitVimPaths.darwin": "~/.config/nvim/init.lua",
    "vscode-neovim.useCtrlKeysForInsertMode": false,
    "vscode-neovim.useCtrlKeysForNormalMode": false,
    "workbench.colorCustomizations": {
        "editorError.foreground": "#111111",
        "editorInfo.foreground": "#555555",
        "editorWarning.foreground": "#000000"
    },
    "workbench.colorTheme": "Default Dark+",
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "workbench.editor.tabSizing": "shrink",
    "workbench.startupEditor": "none",
    "window.zoomLevel": 1
}
